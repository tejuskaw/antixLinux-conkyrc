# Use Xft?
use_xft yes
xftfont FreeSans MS:size=10
xftalpha 0.8
text_buffer_size 2048

# Update interval in seconds
update_interval 1

# This is the number of times Conky will update before quitting.
# Set to zero to run forever.
total_run_times 0

# Create own window instead of using desktop (required in nautilus)
#    own_window yes
#   own_window_transparent yes
#    own_window_type desktop
#    own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager

# Use double buffering (reduces flicker, may not work for everyone)
double_buffer yes

# Minimum size of text area
minimum_size 300 0
maximum_width 300

# Draw shades?
draw_shades no

# Draw outlines?
draw_outline no

# Draw borders around text
draw_borders no

# Stippled borders?
stippled_borders 0

# border margins
border_margin 5

# border width
border_width 1

# Default colors and also border colors
default_color white
own_window_colour white

# Text alignment, other possible values are commented
alignment top_right

# Gap between borders of screen and text
 same thing as passing -x at command line
gap_x 10
gap_y 15

# Subtract file system buffers from used memory?
no_buffers yes

# set to yes if you want all text to be in uppercase
uppercase no

# number of cpu samples to average
# set to 1 to disable averaging
cpu_avg_samples 2

# number of net samples to average
# set to 1 to disable averaging
net_avg_samples 2

# Force UTF8? note that UTF8 support required XFT
override_utf8_locale yes

# Add spaces to keep things from moving about?  This only affects certain objects.
use_spacer right

# colours
color1 white
# light blue
color2 6892C6
# orange
#E77320
color3 FC8820
# green
color4 78BF39
# red
color5 CC0000

TEXT

SYSTEM ${hr 2}
Host:  ${alignr}${nodename}
Kernel:  ${alignr}${kernel}
CPU: ${cpu cpu}% ${alignr}${cpubar 8,175 cpu}
RAM: $memperc% ${alignr}${membar 8,175}
RAM: ${alignr} $mem/$memmax
SWAP: ${swap}% ${alignr}${swapbar 8,175 cpu}
Uptime: ${alignr}${uptime}

DATE ${hr 2}
${alignc 20}${font Trebuchet MS:size=14}${time %I:%M %p}${font}
${alignc}${time %a %d %b %Y}
HD ${hr 2}
Home: ${alignc}${fs_free /home}/${fs_size /home} ${alignr}${fs_bar 8,125 /home}
Root: ${alignc}${fs_free /root}/${fs_size /root} ${alignr}${fs_bar 8, 125 /root}

NETWORK ${hr 2}
${if_empty ${exec cat /proc/net/arp | grep eth1}}${if_empty ${exec ps -e | grep pppd}}${alignc}${color white}wlan0: ${addr wlan0}$color
${alignc}${wireless_essid wlan0} (${wireless_ap wlan0})
${color 009900}${wireless_link_bar wlan0}$color
down: ${downspeed wlan0}k/s ${alignr}up: ${upspeed wlan0}k/s
total: ${totaldown wlan0} ${alignr} total: ${totalup wlan0}
Signal: ${wireless_link_qual wlan0}% ${alignr}${wireless_link_bar 8,60 wlan0}${else}${if_existing /proc/net/route eth0}
${else}${alignc}${color white}ppp0: ${addr ppp0}$color
down: ${downspeed ppp0}k/s ${alignr}up: ${upspeed ppp0}k/s
total: ${totaldown ppp0} ${alignr} total: ${totalup ppp0}
${downspeedgraph ppp0 15,250 000000 000099} ${alignr}${upspeedgraph ppp0 15,250 000000 990000}${endif}
${else}${alignc}${color white}eth1: ${addr eth1}$color
down: ${downspeed eth1}k/s ${alignr}up: ${upspeed eth1}k/s
total: ${totaldown eth1} ${alignr} total: ${totalup eth1}
${downspeedgraph eth1 15,250 000000 000099} ${alignr}${upspeedgraph eth1 15,250 000000 990000}
${endif} 

Processes${hr 2}
processes: $processes  ${alignr}running: $running_processes
Name ${alignr}PID   CPU%  MEM%
${top name 1} ${alignr}${top pid 1} ${top cpu 1}   ${top mem 1}
${top name 2} ${alignr}${top pid 2} ${top cpu 2}   ${top mem 2}
${top name 3} ${alignr}${top pid 3} ${top cpu 3}   ${top mem 3}

Battery${hr 2}
Battery: ${battery_percent BAT0}% ${alignr}
${color Green}${battery_bar 7,50 BAT0} ${execi 1000 acpi 2>/dev/null | grep -q . && echo "Battery: "}${execi 10 acpi -b 2>/dev/null | cut -d" " -f3,4 | sed 's/,$//'}